;;;; Emacs Bookmark Format Version 1 ;;;; -*- coding: no-conversion -*-
;;; This format is meant to be slightly human-readable;
;;; nevertheless, you probably don't want to edit it.
;;; -*- End Of Bookmark File Format Version Stamp -*-
((";; (define-key Info-mode-map [mouse-4]         'Info-history-back)"
 (filename . "~/.emacs.d/plugins2/info+.el")
 (front-context-string . "  ;; (define-key")
 (rear-context-string . "ode-new-window)\n")
 (position . 28417))
(";; TODO: the format of quick templates changed in recent Org versions"
 (filename . "~/.emacs.d/config/org/my-org-ux.el")
 (front-context-string . ";; TODO: the for")
 (rear-context-string . "repend t :))))\n\n")
 (position . 5244))
("(defun my-ibuffer-mode-hook ()"
 (filename . "~/.emacs.d/config/my-generic-ui-config.el")
 (front-context-string . "defun my-ibuffer")
 (rear-context-string . "up-name) 1))\n\n\n(")
 (position . 7209))
("(defvar neotree-mode-map"
 (filename . "~/.emacs.d/forked-plugins/emacs-neotree/neotree.el")
 (front-context-string . "\n  (let ((map (m")
 (rear-context-string . "neotree-mode-map")
 (position . 16854))
("def write_chunks(self, response, f):"
 (filename . "~/projects/truststamp/peanuts/imagetoolbox/peanut_imagetoolbox/file.py")
 (front-context-string . "    def write_ch")
 (rear-context-string . "mat(extension)\n\n")
 (position . 2352))
("org-capture-last-stored-marker"
 (filename . "~/todo/nowe.org")
 (front-context-string . "** TODO zoom a'l")
 (rear-context-string . "  :END:\n* EMACS\n")
 (position . 1367))
("(global-set-key (kbd \"C-z\")         'mc/mark-all-like-this) ; TODO: needs better bindings"
 (filename . "~/.emacs.d/config/my-generic-editing-config.el")
 (front-context-string . "(global-set-key ")
 (rear-context-string . "ious-like-this)\n")
 (position . 4570))
("(read-event))))"
 (filename . "~/.emacs.d/plugins2/help+.el")
 (front-context-string . "vent))))\n       ")
 (rear-context-string . "         (read-e")
 (position . 8140))
("(defn       (key-binding key t))"
 (filename . "~/.emacs.d/plugins2/help+.el")
 (front-context-string . "ing key t))\n    ")
 (rear-context-string . "       (key-bind")
 (position . 8924))
("`(if (memq major-mode '(python-mode nim-mode livescript-mode)) comment-start (concat comment-start comment-start))` NOTE`(my-get-today)`(pk):"
 (filename . "~/.emacs.d/snippets/prog-mode/NOTE")
 (front-context-string . "`(if (memq major")
 (rear-context-string . "TE comment\n# --\n")
 (position . 95))
("(provide 'flymake-mypy)"
 (filename . "~/.emacs.d/plugins2/flymake-mypy.el")
 (front-context-string . "(provide 'flymak")
 (rear-context-string . "mypy-init))\n  )\n")
 (position . 1046))
("* Org Table cheatsheet"
 (filename . "~/poligon/modts/python_contracts.org")
 (front-context-string . "et\n\n| C-c TAB   ")
 (rear-context-string . "g Table cheatshe")
 (position . 1438))
("7.5.2 Using column view"
 (front-context-string . "7.5.2 Using colu")
 (rear-context-string . "p: Column view\n\n")
 (position . 222061)
 (filename . "/usr/local/share/info/org")
 (info-node . "Using column view")
 (handler . Info-bookmark-jump))
("25.10 Org Mode"
 (front-context-string . "25.10 Org Mode\n=")
 (rear-context-string . "ode,  Up: Text\n\n")
 (position . 794887)
 (filename . "/usr/local/share/info/emacs")
 (info-node . "Org Mode")
 (handler . Info-bookmark-jump))
("25.9 Outline Mode"
 (front-context-string . "25.9 Outline Mod")
 (rear-context-string . "ode,  Up: Text\n\n")
 (position . 779764)
 (filename . "/usr/local/share/info/emacs")
 (info-node . "Outline Mode")
 (handler . Info-bookmark-jump))
("12.5 Rectangles"
 (front-context-string . "12.5 Rectangles\n")
 (rear-context-string . ",  Up: Killing\n\n")
 (position . 229093)
 (filename . "/usr/local/share/info/emacs")
 (info-node . "Rectangles")
 (handler . Info-bookmark-jump))
("25.16 Two-Column Editing"
 (front-context-string . "25.16 Two-Column")
 (rear-context-string . "les,  Up: Text\n\n")
 (position . 847073)
 (filename . "/usr/local/share/info/emacs")
 (info-node . "Two-Column")
 (handler . Info-bookmark-jump))
("(emacs) Text Based Tables"
 (front-context-string . "\n25.15 Editing T")
 (rear-context-string . "Text,  Up: Text\n")
 (position . 832389)
 (filename . "/usr/local/share/info/emacs")
 (info-node . "Text Based Tables")
 (handler . Info-bookmark-jump))
("display-line-numbers src"
 (filename . "~/portless/emacs/src/xdisp.c")
 (front-context-string . "or overlay prope")
 (rear-context-string . "' text property\n")
 (position . 1058289))
("wrap-region.el"
 (filename . "~/.emacs.d/forked-plugins/wrap-region/wrap-region.el")
 (front-context-string . "\n(defun wrap-reg")
 (rear-context-string . "g org-mode)))))\n")
 (position . 11481))
("(defun er/prepare-for-more-expansions-internal (repeat-key-str)"
 (filename . "~/.emacs.d/forked-plugins/expand-region-el/expand-region-core.el")
 (front-context-string . "-more-expansions")
 (rear-context-string . "n er/prepare-for")
 (position . 6286))
("(while (and (not (eolp)) (> w 0))"
 (filename . "~/.emacs.d/forked-plugins/popup-el/popup.el")
 (front-context-string . "          (while")
 (rear-context-string . "ngth prefix)))\n\n")
 (position . 22165))
("(cl-defun popup-set-line-item (popup"
 (filename . "~/.emacs.d/elpa/popup-20150315.612/popup.el")
 (front-context-string . "(cl-defun popup-")
 (rear-context-string . "tring) nil))))\n\n")
 (position . 11933))
(";; Set elscreen tab label"
 (filename . "~/.emacs.d/plugins2/elscreen/elscreen.el")
 (front-context-string . "el\n             ")
 (rear-context-string . "elscreen tab lab")
 (position . 29261))
("copy-dir-locals-to-file-locals\342\200\231 copies directory-local variables to the"
 (front-context-string . "ocals\342\200\231 copies di")
 (rear-context-string . "locals-to-file-l")
 (position . 1578793)
 (filename . "/usr/local/share/info/emacs")
 (info-node . "Specifying File Variables")
 (handler . Info-bookmark-jump))
("(defun org-babel-execute-maybe ()"
 (filename . "~/portless/org-mode/lisp/ob-core.el")
 (front-context-string . "g-babel-execute-")
 (rear-context-string . "toload\n(defun or")
 (position . 11401))
("40.1.4 Command-Line Arguments"
 (front-context-string . "40.1.4 Command-L")
 (rear-context-string . "p: Starting Up\n\n")
 (position . 3162049)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Command-Line Arguments")
 (handler . Info-bookmark-jump))
("-- Variable: command-line-args"
 (front-context-string . " -- Variable: co")
 (rear-context-string . "cs Invocation.\n\n")
 (position . 3164317)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Command-Line Arguments")
 (handler . Info-bookmark-jump))
("-- User Option: enable-local-variables"
 (front-context-string . "\n     This varia")
 (rear-context-string . "-local-variables")
 (position . 561544)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "File Local Variables")
 (handler . Info-bookmark-jump))
("12.12 File Local Variables"
 (front-context-string . "12.12 File Local")
 (rear-context-string . " Up: Variables\n\n")
 (position . 560499)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "File Local Variables")
 (handler . Info-bookmark-jump))
("(setq screen-name (buffer-name (window-buffer (selected-window)))"
 (filename . "~/.emacs.d/plugins2/elscreen/elscreen.el")
 (front-context-string . "creen-name (buff")
 (rear-context-string . "         (setq s")
 (position . 29182))
("(defun export-lightcorn-docs ()"
 (filename . "~/.emacs.d/config/org/my-org-babel.el")
 (front-context-string . "(defun export-li")
 (rear-context-string . "htcorn-docs ())\n")
 (position . 3106))
("org-capture-last-stored"
 (filename . "~/todo/nowe.org")
 (front-context-string . "** TODO ivy zami")
 (rear-context-string . " Compilation]]\n\n")
 (position . 6600))
("org-refile-last-stored"
 (filename . "~/todo/nowe.org")
 (front-context-string . "** TODO zoom a'l")
 (rear-context-string . "  :END:\n* EMACS\n")
 (position . 1367))
("(set-buffer buf)  ;In case timer/filter changed/killed it (bug#16029)!"
 (filename . "/usr/local/share/emacs/27.0.50/lisp/epa-file.el")
 (front-context-string . ")  ;In case time")
 (rear-context-string . " (set-buffer buf")
 (position . 6798))
(";; when decryption failed (bug#6568).  See the place"
 (filename . "/usr/local/share/emacs/27.0.50/lisp/epa-file.el")
 (front-context-string . "ecryption failed")
 (rear-context-string . "       ;; when d")
 (position . 6286))
("20.6 Completion"
 (front-context-string . "20.6 Completion\n")
 (rear-context-string . "p: Minibuffers\n\n")
 (position . 1001704)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Completion")
 (handler . Info-bookmark-jump))
("-- Variable: completion-at-point-functions"
 (front-context-string . " -- Variable: co")
 (rear-context-string . "nt-functions\342\200\231:\n\n")
 (position . 1049075)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Completion in Buffers")
 (handler . Info-bookmark-jump))
("20.6.8 Completion in Ordinary Buffers"
 (front-context-string . "20.6.8 Completio")
 (rear-context-string . "Up: Completion\n\n")
 (position . 1048623)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Completion in Buffers")
 (handler . Info-bookmark-jump))
("completion-at-point functions"
 (front-context-string . "          If the")
 (rear-context-string . "   \342\200\230:exclusive\342\200\231\n")
 (position . 1050552)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Completion in Buffers")
 (handler . Info-bookmark-jump)
 (annotation . ""))
("-- Function: quit-restore-window &optional window bury-or-kill"
 (front-context-string . "-window &optiona")
 (rear-context-string . "on: quit-restore")
 (position . 1891252)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Quitting Windows")
 (handler . Info-bookmark-jump))
("This function handles WINDOW and its buffer after quitting.  The"
 (front-context-string . " WINDOW and its ")
 (rear-context-string . "function handles")
 (position . 1891316)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Quitting Windows")
 (handler . Info-bookmark-jump))
("* Helm M-x"
 (filename . "~/todo/helm-help.org")
 (front-context-string . "Helm M-x\n\n** Tip")
 (rear-context-string)
 (position . 3))
("{{- range $key, $val := .Values.farro.env.secret }}"
 (filename . "~/projects/harvester/services/farro/templates/secret.yaml")
 (front-context-string . "{{- range $key, ")
 (rear-context-string . "EY | b64enc }}'\n")
 (position . 210))
(";; 1. Pass non-nil second arg to `dired-get-filename' so we can include `.' and `..'."
 (filename . "~/.emacs.d/elpa/dired+-21.2/dired+.el")
 (front-context-string . " second arg to `")
 (rear-context-string . " 1. Pass non-nil")
 (position . 95194))
(";;; json-mode.el --- Major mode for editing JSON files"
 (filename . "~/.emacs.d/elpa/json-mode-20131016.1653/json-mode.el")
 (front-context-string . ";;; json-mode.el")
 (rear-context-string)
 (position . 1))
(";; As a rough beginning, what I do is to keep my `remember-data-file' in"
 (filename . "/usr/local/share/emacs/27.0.50/lisp/textmodes/remember.el")
 (front-context-string . "ile' in\n;; outli")
 (rear-context-string . "`remember-data-f")
 (position . 5497))
("(let ((content (my-org-macro-replace-all-in-string (buffer-string) templates)))"
 (filename . "~/projects/lightcorn/docs/lisp/org-config.el")
 (front-context-string . "g (buffer-string")
 (rear-context-string . "ace-all-in-strin")
 (position . 7951))
("Handle C stack overflow caused by too nested Lisp evaluation."
 (filename . "~/portless/emacs/src/ChangeLog.13")
 (front-context-string . "	Handle C stack ")
 (rear-context-string . "pov@yandex.ru>\n\n")
 (position . 185174))
("nameserver 10.124.0.2"
 (filename .
           #("/sudo:root@f28:/etc/resolv.conf" 6 10
             (tramp-default t)))
 (front-context-string . "nameserver 10.12")
 (rear-context-string . " NetworkManager\n")
 (position . 31))
("You can explicitly tell Emacs to make another backup file from a"
 (front-context-string . "You can explicit")
 (rear-context-string . "directory\342\200\231.\n\n   ")
 (position . 467794)
 (filename . "/usr/local/share/info/emacs")
 (info-node . "Backup")
 (handler . Info-bookmark-jump))
("(add-hook 'window-size-change-functions 'elscreen-frame-change-size-hook)"
 (filename . "~/.emacs.d/plugins2/elscreen/elscreen.el")
 (front-context-string . "(add-hook 'windo")
 (rear-context-string . "hange-functions\n")
 (position . 60026))
("** Simple request-response session - full example"
 (filename . "~/projects/lightcorn/docs/flow.org")
 (front-context-string . "** Simple reques")
 (rear-context-string . "n the request.\n\n")
 (position . 5913))
("\"Find first wrapper with trigger KEY that should be active in MAJOR-MODE.\""
 (filename . "~/.emacs.d/forked-plugins/wrap-region/wrap-region.el")
 (front-context-string . "first wrapper wi")
 (rear-context-string . "d (key)\n  \"Find ")
 (position . 5384))
("(defun wrap-region-define-wrappers ()"
 (filename . "~/.emacs.d/forked-plugins/wrap-region/wrap-region.el")
 (front-context-string . "ppers ()\n  \"Defi")
 (rear-context-string . "egion-define-wra")
 (position . 11157))
("(defun elscreen-frame-change-size-hook (f)"
 (filename . "~/.emacs.d/plugins2/elscreen/elscreen.el")
 (front-context-string . "screen-frame-cha")
 (rear-context-string . "w))))\n\n(defun el")
 (position . 59877))
("-- Window Parameters"
 (front-context-string . "delete-other-win")
 (rear-context-string . "indows::).\n\n\342\200\230no-")
 (position . 1973359)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Window Parameters")
 (handler . Info-bookmark-jump))
("not delete any window whose \342\200\230no-delete-other-windows\342\200\231 parameter is"
 (front-context-string . "-delete-other-wi")
 (rear-context-string . "window whose \342\200\230no")
 (position . 1817547)
 (filename . "/usr/local/share/info/elisp")
 (info-node . "Deleting Windows")
 (handler . Info-bookmark-jump))
("(defun elscreen-make-frame-confs (frame &optional keep-window-configuration)"
 (filename . "~/.emacs.d/plugins2/elscreen/elscreen.el")
 (front-context-string . "al keep-window-c")
 (rear-context-string . "s (frame &option")
 (position . 16174))
("(defun elscreen-e21-tab-update (&optional force)"
 (filename . "~/.emacs.d/plugins2/elscreen/elscreen.el")
 (front-context-string . "optional force)\n")
 (rear-context-string . "21-tab-update (&")
 (position . 59833))
("(defvar elscreen-screen-update-hook nil)"
 (filename . "~/.emacs.d/plugins2/elscreen/elscreen.el")
 (front-context-string . "te-hook nil)\n(de")
 (rear-context-string . "reen-screen-upda")
 (position . 21961))
("(defconst elscreen-control-tab"
 (filename . "~/.emacs.d/plugins2/elscreen/elscreen.el")
 (front-context-string . "screen-control-t")
 (rear-context-string . "))\n\n(defconst el")
 (position . 58319))
("(let ((name (s-trim"
 (filename . "~/.emacs.d/config/my-generic-ui-config.el")
 (front-context-string . "\n               ")
 (rear-context-string . "t ((name (s-trim")
 (position . 6540))
)
